# Comments are provided throughout this file to help you get started.
# If you need more help, visit the Docker Compose reference guide at
# https://docs.docker.com/go/compose-spec-reference/

# Here the instructions define your application as a service called "server".
# This service is built from the Dockerfile in the current directory.
# You can add other services your application may depend on here, such as a
# database or a cache. For examples, see the Awesome Compose repository:
# https://github.com/docker/awesome-compose
services:
  server:
    build:
      context: .
    ports:
      - ${PORT}:${PORT}
    depends_on:
      db:
        condition: service_healthy
    networks:
      - mynetwork
    env_file:
      - .env
    volumes: 
      - /logs/db_log:/app/logs/db_logs/


  db:
    image: postgres
    container_name: postgres
    restart: always
    user: postgres
    networks:
      - mynetwork
    ports:
      - ${PORT_DATACOLLECTOR}:${PORT_DATACOLLECTOR}
    secrets:
      - db-password
    volumes:
      - db-data:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=DataCollector
      - POSTGRES_PASSWORD_FILE=/run/secrets/db-password
    healthcheck:
      test: [ "CMD", "pg_isready" ]
      interval: 10s
      timeout: 5s
      retries: 5
volumes:
  db-data:
secrets:
  db-password:
    file: db/password.txt

networks:
  mynetwork:
    driver: bridge

